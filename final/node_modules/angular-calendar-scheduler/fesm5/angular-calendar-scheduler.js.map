{"version":3,"file":"angular-calendar-scheduler.js.map","sources":["ng://angular-calendar-scheduler/modules/scheduler/scheduler-config.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-view.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-cell.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-header.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-title.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-content.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-actions.component.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-event-title-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/pipes/scheduler-event-title.pipe.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-date-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-utils.ts","ng://angular-calendar-scheduler/modules/scheduler/scheduler.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Auth configuration.\r\n */\r\n@Injectable()\r\nexport class SchedulerConfig {\r\n    locale?: string = 'en';\r\n    headerDateFormat?: 'weekNumber' | 'daysRange' = 'daysRange';\r\n\r\n    constructor(config: SchedulerConfig = {}) {\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return config && source !== undefined ? source : defaultValue;\r\n        }\r\n\r\n        this.locale = use(config.locale, this.locale);\r\n        this.headerDateFormat = use(config.headerDateFormat, this.headerDateFormat);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ChangeDetectorRef,\r\n    OnChanges,\r\n    OnInit,\r\n    OnDestroy,\r\n    LOCALE_ID,\r\n    Inject,\r\n    TemplateRef,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    EventColor,\r\n    DayViewHour,\r\n    DayViewHourSegment\r\n} from 'calendar-utils';\r\nimport {\r\n    startOfMinute,\r\n    startOfDay,\r\n    startOfWeek,\r\n    endOfDay,\r\n    endOfWeek,\r\n    addMinutes,\r\n    addHours,\r\n    addDays,\r\n    subSeconds,\r\n    setMinutes,\r\n    setHours,\r\n    setDate,\r\n    setMonth,\r\n    setYear,\r\n    isSameSecond,\r\n    isSameDay,\r\n    getDay\r\n} from 'date-fns';\r\nimport { SchedulerConfig } from './scheduler-config';\r\n\r\n\r\nconst WEEKEND_DAY_NUMBERS = [0, 6];\r\nconst DAYS_IN_WEEK = 7;\r\nconst HOURS_IN_DAY = 24;\r\nconst MINUTES_IN_HOUR = 60;\r\nconst SECONDS_IN_DAY = 60 * 60 * 24;\r\n\r\nexport interface SchedulerView {\r\n    days: SchedulerViewDay[];\r\n}\r\n\r\nexport interface SchedulerViewDay {\r\n    date: Date;\r\n    isPast: boolean;\r\n    isToday: boolean;\r\n    isFuture: boolean;\r\n    isWeekend: boolean;\r\n    inMonth: boolean;\r\n    dragOver: boolean;\r\n    backgroundColor?: string;\r\n    cssClass?: string;\r\n    hours: SchedulerViewHour[];\r\n}\r\n\r\nexport interface SchedulerViewHour {\r\n    hour: DayViewHour;\r\n    date: Date;\r\n    segments: SchedulerViewHourSegment[];\r\n    isPast: boolean;\r\n    isFuture: boolean;\r\n    hasBorder: boolean;\r\n    backgroundColor?: string;\r\n    cssClass?: string;\r\n}\r\n\r\nexport interface SchedulerViewHourSegment {\r\n    segment: DayViewHourSegment;\r\n    date: Date;\r\n    events: CalendarSchedulerEvent[];\r\n    isPast: boolean;\r\n    isFuture: boolean;\r\n    isDisabled: boolean;\r\n    hasBorder: boolean;\r\n    backgroundColor?: string;\r\n    cssClass?: string;\r\n}\r\n\r\nexport interface CalendarSchedulerEvent {\r\n    id: string;\r\n    start: Date;\r\n    end?: Date;\r\n    title: string;\r\n    content?: string;\r\n    color: EventColor;\r\n    actions?: CalendarSchedulerEventAction[];\r\n    status?: CalendarSchedulerEventStatus;\r\n    cssClass?: string;\r\n    startsBeforeSegment?: boolean;\r\n    endsAfterSegment?: boolean;\r\n    isHovered?: boolean;\r\n    isDisabled?: boolean;\r\n    isClickable?: boolean;\r\n}\r\n\r\nexport type CalendarSchedulerEventStatus = 'ok' | 'warning' | 'danger';\r\n\r\nexport interface CalendarSchedulerEventAction {\r\n    when?: 'enabled' | 'disabled';\r\n    label: string;\r\n    title: string;\r\n    cssClass?: string;\r\n    onClick(event: CalendarSchedulerEvent): void;\r\n}\r\n\r\n // https://css-tricks.com/snippets/css/a-guide-to-flexbox/\r\n@Component({\r\n    selector: 'calendar-scheduler-view',\r\n    template: `\r\n        <div class=\"cal-scheduler-view\" #weekViewContainer>\r\n            <calendar-scheduler-header\r\n                [days]=\"headerDays\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"headerTemplate\"\r\n                (dayClicked)=\"dayClicked.emit($event)\">\r\n            </calendar-scheduler-header>\r\n\r\n            <div class=\"cal-scheduler\">\r\n                <div class=\"cal-scheduler-hour-rows aside\">\r\n                    <div class=\"cal-scheduler-hour align-center horizontal\" *ngFor=\"let hour of hours\">\r\n                      <div class=\"cal-scheduler-time\">\r\n                        <div class=\"cal-scheduler-hour-segment\" *ngFor=\"let segment of hour.segments\">\r\n                            {{ segment.date | calendarDate:'dayViewHour':locale }}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"cal-scheduler-cols aside\">\r\n                    <div class=\"cal-scheduler-col\" *ngFor=\"let day of view.days\">\r\n                        <calendar-scheduler-cell\r\n                            *ngFor=\"let hour of day.hours\"\r\n                            [ngClass]=\"day?.cssClass\"\r\n                            [day]=\"day\"\r\n                            [hour]=\"hour\"\r\n                            [locale]=\"locale\"\r\n                            [tooltipPlacement]=\"tooltipPlacement\"\r\n                            [showActions]=\"showActions\"\r\n                            [customTemplate]=\"cellTemplate\"\r\n                            [eventTemplate]=\"eventTemplate\"\r\n                            (click)=\"dayClicked.emit({date: day})\"\r\n                            (highlightSegment)=\"toggleSegmentHighlight($event.event, true)\"\r\n                            (unhighlightSegment)=\"toggleSegmentHighlight($event.event, false)\"\r\n                            (segmentClicked)=\"segmentClicked.emit({segment: $event.segment})\"\r\n                            (eventClicked)=\"eventClicked.emit({event: $event.event})\">\r\n                        </calendar-scheduler-cell>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`.cal-scheduler-view .cal-scheduler-headers{display:flex;flex-flow:row wrap;margin-bottom:3px;border:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler-headers .aside{flex:1 0}.cal-scheduler-view .cal-scheduler-headers .aside.cal-header-clock{max-width:5em}.cal-scheduler-view .cal-scheduler-headers .cal-header{flex:1;text-align:center;padding:5px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-scheduler-view .cal-scheduler-headers .cal-header:not(:last-child){border-right:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler-headers .cal-header:hover{background-color:#ededed}.cal-scheduler-view .cal-scheduler-headers .cal-header.cal-today{background-color:#e8fde7}.cal-scheduler-view .cal-scheduler-headers .cal-header.cal-weekend span{color:#8b0000}.cal-scheduler-view .cal-scheduler-headers .cal-header span{font-weight:400;opacity:.5}.cal-scheduler-view .cal-scheduler,.cal-scheduler-view .cal-scheduler-headers .cal-header-cols{display:flex;flex-flow:row wrap}.cal-scheduler-view .cal-scheduler .aside{flex:1 0}.cal-scheduler-view .cal-scheduler .aside.cal-scheduler-hour-rows{max-width:5em}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows{width:auto!important;border:1px solid #e1e1e1;overflow:hidden;position:relative}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour{display:flex;height:7.25em}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour:nth-child(odd){background-color:#fafafa}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour:not(:last-child){border-bottom:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time{display:flex;flex-flow:column wrap;width:100%;font-weight:700;text-align:center}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time .cal-scheduler-hour-segment{flex:1 0}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time .cal-scheduler-hour-segment:hover{background-color:#ededed}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time .cal-scheduler-hour-segment:not(:last-child){border-bottom:thin dashed #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols{display:flex;flex-flow:row wrap;border-top:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col{display:flex;flex-flow:column wrap;flex:1 0;border-right:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell{display:flex;flex-flow:column wrap;flex:1 0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell.cal-today{background-color:#e8fde7}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell.cal-disabled{background-color:#eee;pointer-events:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell.cal-disabled .cal-scheduler-events{filter:opacity(50%);-webkit-filter:opacity(50%)}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments{display:flex;flex-flow:column wrap;flex:1 0;border-bottom:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments.no-border{border-bottom:0!important}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments.cal-disabled{background-color:#eee;pointer-events:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments.cal-disabled .cal-scheduler-event{filter:opacity(50%);-webkit-filter:opacity(50%)}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment{flex:1 0;display:flex;flex-flow:column wrap}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment:not(.has-events):hover{background-color:#ededed}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment:not(:last-child){border-bottom:thin dashed #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment.no-border{border-bottom:0!important}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment.cal-disabled{background-color:#eee;pointer-events:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events,.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container{flex:1 0;display:flex;flex-flow:column wrap}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event{flex:1 0;display:flex;flex-flow:row wrap;padding:0 10px;font-size:12px;margin:0 2px;line-height:30px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;transition:all ease-out .2s;filter:brightness(100%);-webkit-filter:brightness(100%);-webkit-backface-visibility:hidden}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event.cal-starts-within-segment{border-top-left-radius:.3em;border-top-right-radius:.3em;margin-top:2px}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event.cal-ends-within-segment{border-bottom-left-radius:.3em;border-bottom-right-radius:.3em;margin-bottom:2px}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event.cal-disabled{background-color:gray!important;filter:grayscale(100%);-webkit-filter:grayscale(100%)}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event.cal-not-clickable{cursor:not-allowed!important}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event:not(.cal-disabled).hovered,.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event:not(.cal-disabled):hover{cursor:pointer;filter:brightness(80%);-webkit-filter:brightness(80%)}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container{position:relative;width:100%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-title{font-size:16px;font-weight:700}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status{position:absolute;top:25%;right:1%;width:16px;height:16px;background:grey;border-radius:50px;border:1px solid #000}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status.ok{background:green}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status.warning{background:orange}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status.danger{background:red}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-content-container{width:100%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-actions-container{flex:1 0;position:relative}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-actions-container .cal-scheduler-event-actions{position:absolute;bottom:5px;right:0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-cell .cal-scheduler-segments .cal-scheduler-segment .cal-scheduler-events .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-actions-container .cal-scheduler-event-actions .cal-scheduler-event-action{text-decoration:none}`],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarSchedulerViewComponent implements OnChanges, OnInit, OnDestroy {\r\n    /**\r\n     * The current view date\r\n     */\r\n    @Input() viewDate: Date;\r\n\r\n    /**\r\n     * An array of events to display on view\r\n     */\r\n    @Input() events: CalendarSchedulerEvent[] = [];\r\n\r\n    /**\r\n     * The number of segments in an hour. Must be <= 6\r\n     */\r\n    @Input() hourSegments: number = 2;\r\n\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n     */\r\n    @Input() excludeDays: number[] = [];\r\n\r\n    /**\r\n     * Specify if the first day of current scheduler view has to be today or the first day of the week\r\n     */\r\n    @Input() startsWithToday: boolean = false;\r\n\r\n    /**\r\n     * Specify if actions must be shown or not\r\n     */\r\n    @Input() showActions: boolean = true;\r\n\r\n    /**\r\n     * A function that will be called before each cell is rendered. The first argument will contain the calendar (day, hour or segment) cell.\r\n     * If you add the `cssClass` property to the cell it will add that class to the cell in the template\r\n     */\r\n    @Input() dayModifier: Function;\r\n    @Input() hourModifier: Function;\r\n    @Input() segmentModifier: Function;\r\n\r\n    /**\r\n     * An observable that when emitted on will re-render the current view\r\n     */\r\n    @Input() refresh: Subject<any>;\r\n\r\n    /**\r\n     * The locale used to format dates\r\n     */\r\n    @Input() locale: string;\r\n\r\n    /**\r\n     * The placement of the event tooltip\r\n     */\r\n    @Input() tooltipPlacement: string = 'bottom';\r\n\r\n    /**\r\n     * The start number of the week\r\n     */\r\n    @Input() weekStartsOn: number;\r\n\r\n    /**\r\n     * A custom template to use to replace the header\r\n     */\r\n    @Input() headerTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use to replace the day cell\r\n     */\r\n    @Input() cellTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for week view events\r\n     */\r\n    @Input() eventTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * The precision to display events.\r\n     * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\r\n     */\r\n    @Input() precision: 'days' | 'minutes' = 'days';\r\n\r\n    /**\r\n     * The day start hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayStartHour: number = 0;\r\n\r\n    /**\r\n     * The day start minutes. Must be 0-59\r\n     */\r\n    @Input() dayStartMinute: number = 0;\r\n\r\n    /**\r\n     * The day end hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayEndHour: number = 23;\r\n\r\n    /**\r\n     * The day end minutes. Must be 0-59\r\n     */\r\n    @Input() dayEndMinute: number = 59;\r\n\r\n    /**\r\n     * Called when a header week day is clicked\r\n     */\r\n    @Output() dayClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\r\n\r\n    /**\r\n     * Called when the segment is clicked\r\n     */\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    /**\r\n     * Called when the event is clicked\r\n     */\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    days: SchedulerViewDay[];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    headerDays: SchedulerViewDay[];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    view: SchedulerView;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    refreshSubscription: Subscription;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    hours: DayViewHour[] = [];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(private cdr: ChangeDetectorRef, @Inject(LOCALE_ID) locale: string, private config: SchedulerConfig) {\r\n        this.locale = config.locale || locale;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit(): void {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes: any): void {\r\n        this.hours = this.getSchedulerViewHourGrid({\r\n            viewDate: this.viewDate,\r\n            hourSegments: this.hourSegments,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute\r\n            }\r\n        });\r\n\r\n        if (changes.viewDate || changes.excludeDays) {\r\n            this.refreshHeader();\r\n        }\r\n\r\n        if (changes.events || changes.viewDate || changes.excludeDays || changes.dayStartHour || changes.dayEndHour || changes.dayStartMinute || changes.dayEndMinute) {\r\n            this.refreshBody();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy(): void {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    toggleSegmentHighlight(event: CalendarSchedulerEvent, isHighlighted: boolean): void {\r\n        this.days.forEach((day: SchedulerViewDay) => {\r\n            day.hours.forEach((hour: SchedulerViewHour) => {\r\n                // hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                //    if (isHighlighted && segment.events.indexOf(event) > -1) {\r\n                //        segment.backgroundColor = event.color.secondary;\r\n                //    } else {\r\n                //        delete segment.backgroundColor;\r\n                //    }\r\n                // });\r\n                hour.segments.filter((segment: SchedulerViewHourSegment) => segment.events.some((ev: CalendarSchedulerEvent) => ev.id === event.id && ev.start.getDay() === event.start.getDay()))\r\n                    .forEach((segment: SchedulerViewHourSegment) => {\r\n                        segment.events.filter((ev: CalendarSchedulerEvent) => ev.id === event.id && ev.start.getDay() === event.start.getDay())\r\n                            .forEach((e: CalendarSchedulerEvent) => {\r\n                                if (isHighlighted) {\r\n                                    segment.backgroundColor = e.color.secondary;\r\n                                } else {\r\n                                    delete segment.backgroundColor;\r\n                                }\r\n                        });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    private refreshHeader(): void {\r\n        this.headerDays = this.getSchedulerViewDays({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            excluded: this.excludeDays\r\n        });\r\n    }\r\n\r\n    private refreshBody(): void {\r\n        this.view = this.getSchedulerView({\r\n            events: this.events,\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            excluded: this.excludeDays\r\n        });\r\n\r\n        if (this.dayModifier) {\r\n            this.days.forEach(day => this.dayModifier(day));\r\n        }\r\n\r\n        if (this.dayModifier || this.hourModifier || this.segmentModifier) {\r\n            this.view.days.forEach(day => {\r\n                if (this.dayModifier) {\r\n                    this.dayModifier(day);\r\n                }\r\n                day.hours.forEach((hour: SchedulerViewHour) => {\r\n                    if (this.hourModifier) {\r\n                        this.hourModifier(hour);\r\n                    }\r\n                    hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                        if (this.segmentModifier) {\r\n                            this.segmentModifier(segment);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private refreshAll(): void {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n    }\r\n\r\n\r\n    private getSchedulerView(args: GetSchedulerViewArgs): SchedulerView {\r\n        let events: CalendarSchedulerEvent[] = args.events || [];\r\n        const viewDate: Date = args.viewDate;\r\n        const weekStartsOn: number = args.weekStartsOn;\r\n        const startsWithToday: boolean = args.startsWithToday;\r\n        const excluded: number[] = args.excluded || [];\r\n        const precision: string = args.precision || 'days';\r\n\r\n        if (!events) {\r\n            events = [];\r\n        }\r\n\r\n        const startOfViewWeek: Date = startsWithToday ? startOfDay(viewDate) : startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n        const endOfViewWeek: Date = startsWithToday ? addDays(endOfDay(viewDate), 6) : endOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n        // let maxRange: number = DAYS_IN_WEEK - excluded.length;\r\n        const eventsInWeek: CalendarSchedulerEvent[] = this.getEventsInPeriod({ events: events, periodStart: startOfViewWeek, periodEnd: endOfViewWeek });\r\n\r\n        this.days = this.getSchedulerViewDays({\r\n            viewDate: viewDate,\r\n            weekStartsOn: weekStartsOn,\r\n            startsWithToday: startsWithToday,\r\n            excluded: excluded\r\n        });\r\n        this.days.forEach((day: SchedulerViewDay, dayIndex: number) => {\r\n            const hours: SchedulerViewHour[] = [];\r\n            this.hours.forEach((hour: DayViewHour, hourIndex: number) => {\r\n                const segments: SchedulerViewHourSegment[] = [];\r\n                hour.segments.forEach((segment: DayViewHourSegment, segmentIndex: number) => {\r\n                    segment.date = setDate(setMonth(setYear(segment.date, day.date.getFullYear()), day.date.getMonth()), day.date.getDate());\r\n\r\n                    const startOfSegment: Date = segment.date;\r\n                    const endOfSegment: Date = addMinutes(segment.date, MINUTES_IN_HOUR / this.hourSegments);\r\n\r\n                    const evts: CalendarSchedulerEvent[] = this.getEventsInPeriod({\r\n                        events: eventsInWeek,\r\n                        periodStart: startOfSegment,\r\n                        periodEnd: endOfSegment\r\n                    }).map((event: CalendarSchedulerEvent) =>\r\n                        <CalendarSchedulerEvent>{\r\n                            id: event.id,\r\n                            start: event.start,\r\n                            end: event.end,\r\n                            title: event.title,\r\n                            content: event.content,\r\n                            color: event.color,\r\n                            actions: event.actions,\r\n                            status: event.status,\r\n                            cssClass: event.cssClass,\r\n                            startsBeforeSegment: event.start < startOfSegment,\r\n                            endsAfterSegment: event.end > endOfSegment,\r\n                            isHovered: false,\r\n                            isDisabled: event.isDisabled || false,\r\n                            isClickable: event.isClickable !== undefined && event.isClickable !== null ? event.isClickable : true\r\n                        });\r\n                    segments.push(<SchedulerViewHourSegment>{\r\n                        segment: segment,\r\n                        date: new Date(segment.date),\r\n                        events: evts,\r\n                        hasBorder: true\r\n                    });\r\n                });\r\n\r\n                const hourDate: Date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());\r\n                hours.push(<SchedulerViewHour>{ hour: hour, date: hourDate, segments: segments, hasBorder: true });\r\n            });\r\n            day.hours = hours;\r\n        });\r\n\r\n        return <SchedulerView>{\r\n            days: this.days\r\n        };\r\n    }\r\n\r\n\r\n    private isEventInPeriod(args: { event: CalendarSchedulerEvent, periodStart: string | number | Date, periodEnd: string | number | Date }): boolean {\r\n        const event: CalendarSchedulerEvent = args.event, periodStart: string | number | Date = args.periodStart, periodEnd: string | number | Date = args.periodEnd;\r\n        const eventStart: Date = event.start;\r\n        const eventEnd: Date = event.end || event.start;\r\n\r\n        if (eventStart > periodStart && eventStart < periodEnd) {\r\n            return true;\r\n        }\r\n        if (eventEnd > periodStart && eventEnd < periodEnd) {\r\n            return true;\r\n        }\r\n        if (eventStart < periodStart && eventEnd > periodEnd) {\r\n            return true;\r\n        }\r\n        if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, subSeconds(periodEnd, 1))) {\r\n            return true;\r\n        }\r\n        if (isSameSecond(subSeconds(eventEnd, 1), periodStart) || isSameSecond(eventEnd, periodEnd)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getEventsInPeriod(args: { events: CalendarSchedulerEvent[], periodStart: string | number | Date, periodEnd: string | number | Date }): CalendarSchedulerEvent[] {\r\n        const events: CalendarSchedulerEvent[] = args.events, periodStart: string | number | Date = args.periodStart, periodEnd: string | number | Date = args.periodEnd;\r\n        return events.filter((event) => this.isEventInPeriod({ event: event, periodStart: periodStart, periodEnd: periodEnd }));\r\n    }\r\n\r\n    private getSchedulerViewDays(args: GetSchedulerViewArgs): SchedulerViewDay[] {\r\n        const viewDate: Date = args.viewDate;\r\n        const weekStartsOn: number = args.weekStartsOn;\r\n        const startsWithToday: boolean = args.startsWithToday;\r\n        const excluded: number[] = args.excluded || [];\r\n\r\n        const start = startsWithToday ? new Date(viewDate) : startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n        const days: SchedulerViewDay[] = [];\r\n        const loop = (i: number) => {\r\n            const date = addDays(start, i);\r\n            if (!excluded.some((e: number) => date.getDay() === e)) {\r\n                days.push(this.getSchedulerDay({ date: date }));\r\n            }\r\n        };\r\n        for (let i = 0; i < DAYS_IN_WEEK; i++) {\r\n            loop(i);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    private getSchedulerDay(args: { date: Date }): SchedulerViewDay {\r\n        const date: Date = args.date;\r\n        const today: Date = startOfDay(new Date());\r\n\r\n        return <SchedulerViewDay>{\r\n            date: date,\r\n            isPast: date < today,\r\n            isToday: isSameDay(date, today),\r\n            isFuture: date > today,\r\n            isWeekend: WEEKEND_DAY_NUMBERS.indexOf(getDay(date)) > -1,\r\n            hours: []\r\n        };\r\n    }\r\n\r\n    private getSchedulerViewHourGrid(args: GetSchedulerViewHourGridArgs): DayViewHour[] {\r\n        const viewDate: Date = args.viewDate, hourSegments: number = args.hourSegments, dayStart: any = args.dayStart, dayEnd: any = args.dayEnd;\r\n        const hours: DayViewHour[] = [];\r\n\r\n        const startOfView: Date = setMinutes(setHours(startOfDay(viewDate), dayStart.hour), dayStart.minute);\r\n        const endOfView: Date = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);\r\n        const segmentDuration: number = MINUTES_IN_HOUR / hourSegments;\r\n        const startOfViewDay: Date = startOfDay(viewDate);\r\n\r\n        const range = (start: number, end: number): number[] => Array.from({ length: ((end + 1) - start) }, (v, k) => k + start);\r\n        const hoursInView: number[] = range(dayStart.hour, dayEnd.hour);\r\n\r\n        // for (var i = 0; i < HOURS_IN_DAY; i++) {\r\n        hoursInView.forEach((hour: number, i: number) => {\r\n            const segments = [];\r\n            for (let j = 0; j < hourSegments; j++) {\r\n                const date = addMinutes(addHours(startOfViewDay, hour), j * segmentDuration);\r\n                if (date >= startOfView && date < endOfView) {\r\n                    segments.push({\r\n                        date: date,\r\n                        isStart: j === 0\r\n                    });\r\n                }\r\n            }\r\n            if (segments.length > 0) {\r\n                hours.push(<DayViewHour>{ segments: segments });\r\n            }\r\n        });\r\n        return hours;\r\n    }\r\n}\r\n\r\nexport interface GetSchedulerViewArgs {\r\n    events?: CalendarSchedulerEvent[];\r\n    viewDate: Date;\r\n    weekStartsOn: number;\r\n    startsWithToday: boolean;\r\n    excluded?: number[];\r\n    precision?: 'minutes' | 'days';\r\n}\r\n\r\nexport interface GetSchedulerViewHourGridArgs {\r\n    viewDate: Date;\r\n    hourSegments: number;\r\n    dayStart: any;\r\n    dayEnd: any;\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef, HostBinding } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment,\r\n    CalendarSchedulerEvent\r\n} from './calendar-scheduler-view.component';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n@Component({ // [class.no-border]': '!day.hasBorder\r\n    selector: 'calendar-scheduler-cell',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-segments\" *ngIf=\"hour.segments.length > 0\"\r\n                [ngClass]=\"hour?.cssClass\"\r\n                [class.no-border]=\"!hour.hasBorder\">\r\n                <div class=\"cal-scheduler-segment\"\r\n                    *ngFor=\"let segment of hour.segments; let si = index\"\r\n                    [title]=\"title\"\r\n                    [ngClass]=\"segment?.cssClass\"\r\n                    [class.has-events]=\"segment.events.length > 0\"\r\n                    [class.cal-disabled]=\"segment.isDisabled\"\r\n                    [style.backgroundColor]=\"segment.backgroundColor\"\r\n                    [class.no-border]=\"!segment.hasBorder\"\r\n                    (mwlClick)=\"onSegmentClick($event, segment)\">\r\n\r\n                    <div class=\"cal-scheduler-events\" *ngIf=\"segment.events.length > 0\">\r\n                        <calendar-scheduler-event\r\n                            *ngFor=\"let event of segment.events\"\r\n                            [day]=\"day\"\r\n                            [hour]=\"hour\"\r\n                            [segment]=\"segment\"\r\n                            [event]=\"event\"\r\n                            (mouseenter)=\"onMouseEnter($event, segment, event)\"\r\n                            (mouseleave)=\"onMouseLeave($event, segment, event)\"\r\n                            [tooltipPlacement]=\"tooltipPlacement\"\r\n                            [showActions]=\"showActions\"\r\n                            [customTemplate]=\"eventTemplate\"\r\n                            (eventClicked)=\"onEventClick($event, event)\">\r\n                        </calendar-scheduler-event>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                day: day,\r\n                hour: hour,\r\n                locale: locale,\r\n                tooltipPlacement: tooltipPlacement,\r\n                showActions: showActions,\r\n                eventTemplate: eventTemplate,\r\n                highlightSegment: highlightSegment,\r\n                unhighlightSegment: unhighlightSegment,\r\n                segmentClicked: segmentClicked,\r\n                eventClicked: eventClicked\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-cell',\r\n        '[class.cal-past]': 'day.isPast',\r\n        '[class.cal-today]': 'day.isToday',\r\n        '[class.cal-future]': 'day.isFuture',\r\n        '[class.cal-weekend]': 'day.isWeekend',\r\n        '[class.cal-in-month]': 'day.inMonth',\r\n        '[class.cal-out-month]': '!day.inMonth',\r\n        '[style.backgroundColor]': 'day.backgroundColor'\r\n    }\r\n})\r\nexport class CalendarSchedulerCellComponent implements OnInit {\r\n\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() hour: SchedulerViewHour;\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() tooltipPlacement: string;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Input() eventTemplate: TemplateRef<any>;\r\n\r\n    @Output() highlightSegment: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() unhighlightSegment: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.title = moment(this.day.date).format('dddd L');\r\n    }\r\n\r\n    onMouseEnter(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            this.highlightSegment.emit({ event: event });\r\n        }\r\n    }\r\n\r\n    onMouseLeave(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            this.unhighlightSegment.emit({ event: event });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onSegmentClick(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        if (segment.events.length === 0) {\r\n            this.segmentClicked.emit({ segment: segment });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onEventClick(mouseEvent: MouseEvent, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n        if (event.isClickable) {\r\n            this.eventClicked.emit({ event: event });\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { SchedulerViewDay } from './calendar-scheduler-view.component';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-header',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-headers\">\r\n                <div class=\"cal-header aside cal-header-clock align-center\">\r\n                    <i class=\"material-icons md-32\" style=\"margin:auto;\">schedule</i>\r\n                </div>\r\n\r\n                <div class=\"cal-header-cols aside\">\r\n                    <div\r\n                        class=\"cal-header\"\r\n                        *ngFor=\"let day of days\"\r\n                        [class.cal-past]=\"day.isPast\"\r\n                        [class.cal-today]=\"day.isToday\"\r\n                        [class.cal-future]=\"day.isFuture\"\r\n                        [class.cal-weekend]=\"day.isWeekend\"\r\n                        [class.cal-drag-over]=\"day.dragOver\"\r\n                        (mwlClick)=\"dayClicked.emit({date: day.date})\">\r\n                        <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\r\n                        <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{days: days, locale: locale, dayClicked: dayClicked}\">\r\n        </ng-template>\r\n    `\r\n})\r\nexport class CalendarSchedulerHeaderComponent {\r\n\r\n    @Input() days: SchedulerViewDay[];\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Output() dayClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef, OnInit, Renderer2 } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment,\r\n    CalendarSchedulerEvent\r\n} from './calendar-scheduler-view.component';\r\nimport {\r\n    isSameDay\r\n} from 'date-fns';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n/**\r\n * [mwlCalendarTooltip]=\"event.title | calendarEventTitle:'weekTooltip':event\"\r\n * [tooltipPlacement]=\"tooltipPlacement\"\r\n */\r\n@Component({\r\n    selector: 'calendar-scheduler-event',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div\r\n                class=\"cal-scheduler-event\"\r\n                [title]=\"title\"\r\n                [class.cal-starts-within-segment]=\"!event.startsBeforeSegment\"\r\n                [class.cal-ends-within-segment]=\"!event.endsAfterSegment\"\r\n                [class.hovered]=\"event.isHovered\"\r\n                [class.cal-disabled]=\"event.isDisabled || segment.isDisabled\"\r\n                [class.cal-not-clickable]=\"!event.isClickable\"\r\n                [style.backgroundColor]=\"event.color.primary\"\r\n                [ngClass]=\"event?.cssClass\"\r\n                (mwlClick)=\"eventClicked.emit({event: event})\"\r\n                (mouseenter)=\"highlightEvent()\"\r\n                (mouseleave)=\"unhighlightEvent()\">\r\n                <calendar-scheduler-event-title *ngIf=\"!event.startsBeforeSegment\"\r\n                    [event]=\"event\"\r\n                    view=\"week\">\r\n                </calendar-scheduler-event-title>\r\n                <calendar-scheduler-event-content *ngIf=\"!event.startsBeforeSegment\"\r\n                    [event]=\"event\">\r\n                </calendar-scheduler-event-content>\r\n                <calendar-scheduler-event-actions [event]=\"event\" *ngIf=\"showActions && event.isClickable && !event.endsAfterSegment\"></calendar-scheduler-event-actions>\r\n                <calendar-scheduler-event-actions [event]=\"event\" *ngIf=\"showActions && event.isDisabled && !event.endsAfterSegment\"></calendar-scheduler-event-actions>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                day: day,\r\n                hour: hour,\r\n                segment: segment,\r\n                event: event,\r\n                tooltipPlacement: tooltipPlacement,\r\n                showActions: showActions,\r\n                customTemplate: customTemplate,\r\n                eventClicked: eventClicked\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventComponent implements OnInit {\r\n\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() hour: SchedulerViewHour;\r\n\r\n    @Input() segment: SchedulerViewHourSegment;\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    @Input() tooltipPlacement: string;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    constructor(private renderer: Renderer2) {   }\r\n\r\n    public ngOnInit(): void {\r\n        this.segment.hasBorder = this.hour.hasBorder = !this.event.endsAfterSegment;\r\n\r\n        this.title = moment(this.event.start).format('dddd L');\r\n\r\n        this.checkEnableState();\r\n    }\r\n\r\n    private checkEnableState(): void {\r\n        if (this.segment.isDisabled) {\r\n            this.day.hours.forEach((hour: SchedulerViewHour) => {\r\n                hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                    segment.events.filter((event: CalendarSchedulerEvent) => event.id === this.event.id && isSameDay(event.start, this.event.start))\r\n                        .forEach((event: CalendarSchedulerEvent) => {\r\n                            event.isDisabled = true;\r\n                        });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    highlightEvent(): void {\r\n        // let events: CalendarSchedulerEvent[] = this.day.hours\r\n        //    .filter(h => h.segments.some(s => s.events.some(e => e.id === this.event.id)))\r\n        //    .map(h =>\r\n        //        h.segments.map(s =>\r\n        //            s.events.filter(e => e.id === this.event.id)\r\n        //        ).reduce((prev, curr) => prev.concat(curr))\r\n        //    )\r\n        //    .reduce((prev, curr) => prev.concat(curr));\r\n\r\n        this.day.hours.forEach((hour: SchedulerViewHour) => {\r\n            hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                segment.events.filter((event: CalendarSchedulerEvent) => event.id === this.event.id && isSameDay(event.start, this.event.start))\r\n                    .forEach((event: CalendarSchedulerEvent) => {\r\n                        event.isHovered = true;\r\n                    });\r\n            });\r\n        });\r\n    }\r\n\r\n    unhighlightEvent(): void {\r\n        this.day.hours.forEach((hour: SchedulerViewHour) => {\r\n            hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                segment.events.filter((event: CalendarSchedulerEvent) => event.id === this.event.id && isSameDay(event.start, this.event.start))\r\n                    .forEach((event: CalendarSchedulerEvent) => {\r\n                        event.isHovered = false;\r\n                    });\r\n            });\r\n        });\r\n    }\r\n\r\n    // private sameEventInPreviousHour(day: SchedulerViewDay, hour: SchedulerViewHour): CalendarSchedulerEvent {\r\n    //    let hourIndex: number = day.hours.indexOf(hour);\r\n    //    let previousHour = day.hours[hourIndex - 1];\r\n    //    if (previousHour) {\r\n    //        let previousSegment: SchedulerViewHourSegment = previousHour.segments[previousHour.segments.length - 1];\r\n    //        return previousSegment.events[previousSegment.events.length - 1];\r\n    //    }\r\n    //    return null;\r\n    // }\r\n\r\n    // private sameEventInPreviousSegment(segmentIndex: number): CalendarSchedulerEvent {\r\n    //    let previousSegment: SchedulerViewHourSegment = this.hour.segments[segmentIndex - 1];\r\n    //    if (previousSegment) {\r\n    //        return previousSegment.events[previousSegment.events.length - 1];\r\n    //    }\r\n    //    return null;\r\n    // }\r\n\r\n    // private sameEventInNextHour(): CalendarSchedulerEvent {\r\n    //    let hourIndex: number = this.day.hours.indexOf(this.hour);\r\n    //    let nextHour: SchedulerViewHour = this.day.hours[hourIndex + 1];\r\n    //    if (nextHour) {\r\n    //        let nextSegment: SchedulerViewHourSegment = nextHour.segments[0];\r\n    //        return nextSegment.events[0];\r\n    //    }\r\n    //    return null;\r\n    // }\r\n\r\n    // private sameEventInNextSegment(segmentIndex: number): CalendarSchedulerEvent {\r\n    //    let nextSegment: SchedulerViewHourSegment = this.hour.segments[segmentIndex + 1];\r\n    //    if (nextSegment) {\r\n    //        return nextSegment.events[0];\r\n    //    }\r\n    //    return null;\r\n    // }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './calendar-scheduler-view.component';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-title',\r\n    template: `\r\n        <div\r\n            class=\"cal-scheduler-event-title\"\r\n            [innerHTML]=\"event.title | schedulerEventTitle:view:event\">\r\n        </div>\r\n        <div *ngIf=\"event.status\"\r\n            class=\"cal-scheduler-event-status\"\r\n            [class.ok]=\"event.status === 'ok'\"\r\n            [class.warning]=\"event.status === 'warning'\"\r\n            [class.danger]=\"event.status === 'danger'\">\r\n        </div>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-title-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventTitleComponent {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    @Input() view: string;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './calendar-scheduler-view.component';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-content',\r\n    template: `\r\n        <div *ngIf=\"event.content\"\r\n            class=\"cal-scheduler-event-content\"\r\n            [innerHTML]=\"event.content\">\r\n        </div>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-content-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventContentComponent {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent,\r\n    CalendarSchedulerEventAction\r\n} from './calendar-scheduler-view.component';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-actions',\r\n    template: `\r\n        <span *ngIf=\"event.actions\" class=\"cal-scheduler-event-actions\">\r\n            <a\r\n                class=\"cal-scheduler-event-action\"\r\n                href=\"javascript:;\"\r\n                *ngFor=\"let action of actions\"\r\n                (mwlClick)=\"onActionClick($event, action, event)\"\r\n                [ngClass]=\"action.cssClass\"\r\n                [innerHtml]=\"action.label\"\r\n                [title]=\"action.title\">\r\n            </a>\r\n        </span>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-actions-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventActionsComponent implements OnInit {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    public actions: CalendarSchedulerEventAction[] = [];\r\n\r\n    public ngOnInit(): void {\r\n        this.actions = this.event.isDisabled ?\r\n            this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'disabled') :\r\n            this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'enabled');\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onActionClick(mouseEvent: MouseEvent, action: CalendarSchedulerEventAction, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        action.onClick(event);\r\n    }\r\n}\r\n","import { CalendarEventTitleFormatter } from 'angular-calendar';\r\n\r\nexport class SchedulerEventTitleFormatter extends CalendarEventTitleFormatter {\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CalendarSchedulerEvent } from '../calendar-scheduler-view.component';\r\nimport { SchedulerEventTitleFormatter } from '../formatters/scheduler-event-title-formatter.provider';\r\n\r\n@Pipe({\r\n  name: 'schedulerEventTitle'\r\n})\r\nexport class SchedulerEventTitlePipe implements PipeTransform {\r\n  constructor(private schedulerEventTitle: SchedulerEventTitleFormatter) {}\r\n\r\n  transform(title: string, titleType: string, event: CalendarSchedulerEvent): string {\r\n    return this.schedulerEventTitle[titleType](event);\r\n  }\r\n}\r\n","import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n\r\nexport class SchedulerDateFormatter extends CalendarDateFormatter {\r\n\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    public dayViewHour({ date, locale }: DateFormatterParams): string {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric', minute: 'numeric' }).format(date);\r\n    }\r\n\r\n    public weekViewTitle({ date, locale }: DateFormatterParams): string {\r\n        // http://generatedcontent.org/post/59403168016/esintlapi\r\n        const year: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(date);\r\n        const month: string = new Intl.DateTimeFormat(locale, { month: 'short' }).format(date);\r\n\r\n        // var firstDay: number = date.getDate() - date.getDay() + 1; // First day is the day of the month - the day of the week\r\n        let firstDay: number = date.getDate();\r\n        if (date.getDay() === 0) {\r\n            firstDay += 1;\r\n        }\r\n\r\n        let lastDay: number = firstDay + 6; // last day is the first day + 6\r\n\r\n        let firstDayMonth: string = month;\r\n        let lastDayMonth: string = month;\r\n\r\n        let firstDayYear: string = year;\r\n        let lastDayYear: string = year;\r\n\r\n        if (firstDay < 1) {\r\n            const prevMonthDate: Date = new Date(date.getFullYear(), date.getMonth() - 1);\r\n            firstDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(prevMonthDate);\r\n            const daysInPrevMonth: number = this.daysInMonth(prevMonthDate);\r\n\r\n            let i: number = 0;\r\n            let prevMonthDay: number = daysInPrevMonth;\r\n            for (i = 0; i < Math.abs(firstDay); i++) {\r\n                prevMonthDay--;\r\n            }\r\n            firstDay = prevMonthDay;\r\n\r\n            const prevMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(prevMonthDate);\r\n            if (Number(prevMonthYear) < Number(year)) {\r\n                firstDayYear = prevMonthYear;\r\n            }\r\n        }\r\n\r\n        const daysInMonth: number = this.daysInMonth(date);\r\n        if (lastDay > daysInMonth) {\r\n            const nextMonthDate: Date = new Date(date.getFullYear(), date.getMonth() + 1);\r\n            lastDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(nextMonthDate);\r\n\r\n            let i: number = 0;\r\n            let nextMonthDay: number = 0;\r\n            for (i = 0; i < (lastDay - daysInMonth); i++) {\r\n                nextMonthDay++;\r\n            }\r\n            lastDay = nextMonthDay;\r\n\r\n            const nextMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(nextMonthDate);\r\n            if (Number(nextMonthYear) > Number(year)) {\r\n                lastDayYear = nextMonthYear;\r\n            }\r\n        }\r\n\r\n        return `${firstDay}` + (firstDayMonth !== lastDayMonth ? ' ' + firstDayMonth : '') +\r\n            (firstDayYear !== lastDayYear ? ' ' + firstDayYear : '') +\r\n            ` - ${lastDay} ${lastDayMonth} ${lastDayYear}`;\r\n    }\r\n\r\n    private daysInMonth(anyDateInMonth: Date): number {\r\n        return new Date(anyDateInMonth.getFullYear(), anyDateInMonth.getMonth() + 1, 0).getDate();\r\n    }\r\n}\r\n","import {\r\n    startOfDay,\r\n    startOfWeek,\r\n    startOfMonth,\r\n    endOfDay,\r\n    endOfWeek,\r\n    endOfMonth,\r\n    addDays,\r\n    addWeeks,\r\n    addMonths,\r\n    subDays,\r\n    subWeeks,\r\n    subMonths\r\n} from 'date-fns';\r\n\r\nexport type CalendarPeriod = 'day' | 'week' | 'month';\r\n\r\nexport function addPeriod(period: CalendarPeriod, date: Date, amount: number): Date {\r\n    return {\r\n        day: addDays,\r\n        week: addWeeks,\r\n        month: addMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function subPeriod(period: CalendarPeriod, date: Date, amount: number): Date {\r\n    return {\r\n        day: subDays,\r\n        week: subWeeks,\r\n        month: subMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function startOfPeriod(period: CalendarPeriod, date: Date): Date {\r\n    return {\r\n        day: startOfDay,\r\n        week: startOfWeek,\r\n        month: startOfMonth\r\n    }[period](date);\r\n}\r\n\r\nexport function endOfPeriod(period: CalendarPeriod, date: Date): Date {\r\n    return {\r\n        day: endOfDay,\r\n        week: endOfWeek,\r\n        month: endOfMonth\r\n    }[period](date);\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { CalendarSchedulerViewComponent } from './calendar-scheduler-view.component';\r\nimport { CalendarSchedulerCellComponent } from './calendar-scheduler-cell.component';\r\nimport { CalendarSchedulerHeaderComponent } from './calendar-scheduler-header.component';\r\nimport { CalendarSchedulerEventComponent } from './calendar-scheduler-event.component';\r\nimport { CalendarSchedulerEventTitleComponent } from './calendar-scheduler-event-title.component';\r\nimport { CalendarSchedulerEventContentComponent } from './calendar-scheduler-event-content.component';\r\nimport { CalendarSchedulerEventActionsComponent } from './calendar-scheduler-event-actions.component';\r\n\r\nimport { SchedulerEventTitlePipe } from './pipes/scheduler-event-title.pipe';\r\nimport { SchedulerDateFormatter } from './formatters/scheduler-date-formatter.provider';\r\nimport { SchedulerEventTitleFormatter } from './formatters/scheduler-event-title-formatter.provider';\r\n\r\nexport * from './calendar-scheduler-view.component';\r\nexport * from './formatters/scheduler-date-formatter.provider';\r\nexport * from './formatters/scheduler-event-title-formatter.provider';\r\nexport * from './pipes/scheduler-event-title.pipe';\r\nexport * from './calendar-utils';\r\n\r\nimport { SchedulerConfig } from './scheduler-config';\r\n\r\nexport const SCHEDULER_CONFIG = new InjectionToken('SchedulerConfig');\r\n\r\nexport function provideAuthConfig(config: SchedulerConfig) {\r\n    return new SchedulerConfig(config);\r\n}\r\n\r\n/**\r\n * The main module of this library. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalenderModule } from 'angular-calendar';\r\n * import { SchedulerModule } from 'angular-calendar-scheduler';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     CalenderModule.forRoot(),\r\n *     SchedulerModule.forRoot({ locale: 'en', headerDateFormat: 'daysRange' })\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CalendarModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerCellComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent,\r\n    SchedulerEventTitlePipe\r\n  ],\r\n  providers: [\r\n    SchedulerEventTitlePipe,\r\n    SchedulerEventTitleFormatter,\r\n    SchedulerDateFormatter\r\n  ],\r\n  exports: [\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerCellComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent\r\n  ]\r\n})\r\nexport class SchedulerModule {\r\n  static forRoot(config?: SchedulerConfig): ModuleWithProviders {\r\n    return {\r\n        ngModule: SchedulerModule,\r\n        providers: [\r\n            { provide: SCHEDULER_CONFIG, useValue: config },\r\n            { provide: SchedulerConfig, useFactory: provideAuthConfig, deps: [SCHEDULER_CONFIG] }\r\n        ]\r\n    };\r\n}\r\n}\r\n"],"names":["moment","tslib_1.__extends"],"mappings":"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"}
